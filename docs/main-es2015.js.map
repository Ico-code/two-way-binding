{"version":3,"sources":["./src/environments/environment.ts","./src/app/server/server.component.ts","./src/app/server/server.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/servers/servers.component.ts","./src/app/servers/servers.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-server',\r\n  templateUrl: './server.component.html',\r\n  styleUrls: ['./server.component.css']\r\n})\r\nexport class ServerComponent implements OnInit {\r\n\r\n\r\n  serverId: number = 19;\r\n  serverStatus : string = \"offline\";\r\n  constructor() { }\r\n  getServerStatus(){\r\n    return this.serverStatus\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"app-server\">\r\n    <h1>Server Component</h1>\r\n    <p>{{ 'Server' }} with ID {{ serverId }} is {{ getServerStatus() }}</p>\r\n</section>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'custom-component';\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n  <div>\r\n    <section>\r\n        <h1>I'm in the App Component</h1>\r\n    </section>\r\n    <app-servers></app-servers>\r\n</div>\r\n</body>\r\n</html>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ServerComponent } from './server/server.component';\r\nimport { ServersComponent } from './servers/servers.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ServerComponent,\r\n    ServersComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule  \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  //selector: '.app-servers',\r\n  //selector: '[app-servers]',\r\n  selector: 'app-servers',\r\n  templateUrl: './servers.component.html',\r\n  styleUrls: ['./servers.component.css']\r\n})\r\nexport class ServersComponent implements OnInit {\r\n\r\n\r\n  allowNewServer:boolean = false;\r\n  ServerCreationStatus = \"No server was created!\";\r\n  ServerName =\"Testserver\";\r\n\r\n\r\n  constructor() {\r\n    setTimeout(() => {\r\n      this.allowNewServer = true;\r\n    },2000);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCreateServer(){\r\n    this.ServerCreationStatus = \"Server was Created! Server name is \" + this.ServerName;\r\n  }\r\n\r\n  onUpdateServerName(event:Event){\r\n    this.ServerName = (<HTMLInputElement>event.target).value;\r\n  }\r\n\r\n}\r\n","<section>\r\n    <label>Server name</label>\r\n    <!--<input \r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        (input)=\"onUpdateServerName($event)\"> -->\r\n    <input \r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"ServerName\">\r\n    <button \r\n    [disabled]=\"!allowNewServer\" \r\n    class=\"btn btn-primary\"\r\n    (click)=\"onCreateServer()\">Add Server</button>\r\n    <hr>\r\n   <!-- <p class=\"sisennys\">{{ ServerName }}</p> -->\r\n    <p class=\"sisennys\">{{ ServerCreationStatus }}</p>\r\n    <app-server></app-server>\r\n</section>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}